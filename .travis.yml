# We use conda to install cromwell.

language: python

python:
  - 3.6

services:
  - docker

before_install:
  # Install conda
  - export MINICONDA=${HOME}/miniconda
  - export PATH=${MINICONDA}/bin:${PATH}
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -f -p ${MINICONDA}
  - conda config --set always_yes yes
  - conda config --add channels defaults
  - conda config --add channels bioconda
  - conda config --add channels conda-forge

install:
  - conda install --file requirements-test.txt

script:
  - travis_wait 30 pytest --keep-workflow-wd-on-fail --tag $TEST tests/

after_failure:
  # Get the last 1000 lines of the cromwell log to catch the error.
  - bash -c 'tail -n 1000 /tmp/pytest_workflow_*/*/log.out'

matrix:
  include:
    - env: TEST=SingleEnd
    - env: TEST=SingleEnd_noVariantCalling
    - env:
      - TEST=PairedEnd
      - _JAVA_OPTIONS="-Dconfig.file=tests/cromwell.conf"
    - env:
        - TEST=PairedEnd_bwakit
        - _JAVA_OPTIONS="-Dconfig.file=tests/cromwell.conf"
    # Below is for testing if all files are valid and if all submodules are up to date.
    - env: TEST=Womtool validate and submodule up to date
      install:
        - conda install cromwell
      script:
        - set -e
        - for F in *.wdl; do echo $F; womtool validate $F; done
        - >
          if [ "$TRAVIS_PULL_REQUEST" != "false" ];
          then git submodule foreach bash -c
          'if [ "$(git tag --contains)" == "" ] ;
          then git checkout develop && git pull &&
          git submodule update --init --recursive ;
          else echo "on tag: $(git tag --contains)" ; fi' ;
          fi
        - >
          git diff --exit-code ||
          (echo ERROR: Git changes detected. Submodules should either be tagged or on the latest version of develop. && exit 1)
      after_failure: []
