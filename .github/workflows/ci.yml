name: Continuous Integration

on:
  pull_request:
    paths:
      - "**.wdl"  # Workflow files and task.
      - "**.yml"  # Ci configuration, tests and docker images.
      - "!docs/**"

defaults:
  run:
    # This is needed for miniconda, see:
    # https://github.com/marketplace/actions/setup-miniconda#important.
    shell: bash -l {0}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Womtool validate and submodule up to date.
    steps:
      - uses: actions/checkout@v2.3.4 # https://github.com/actions/checkout.
        with:
          submodules: recursive
      - name: Install miniconda.
        uses: conda-incubator/setup-miniconda@v2.0.1 # https://github.com/conda-incubator/setup-miniconda.
        with:
          channels: defaults,bioconda,conda-forge
        # Conda-incubator uses 'test' environment by default.
      - name: Install requirements.
        run: conda install -n test cromwell womtool python>=3.9.1 pytest-workflow>=1.4.0 miniwdl wdl-aid
      - name: Run linting.
        run: bash scripts/biowdl_lint.sh
  test:
    needs: lint  # Don't start testing before the lint has succeeded.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - Germline_SingleEnd
          - Germline_PairedEnd
          - Germline_PairedEnd_bwakit
          - Somatic_SingleEnd
          - Somatic_SingleEnd_CNV
          - Somatic_PairedEnd
          - Somatic_PairedEnd_bwakit
          - Germline_GenderAware
    steps:
      - uses: actions/checkout@v2.3.4 # https://github.com/actions/checkout.
        with:
          submodules: recursive
      - name: Install miniconda.
        uses: conda-incubator/setup-miniconda@v2.0.1 # https://github.com/conda-incubator/setup-miniconda.
        with:
          channels: defaults,bioconda,conda-forge
      - name: Install requirements.
        run: conda install -n test --file requirements-test.txt
      - name: Run test.
        run: pytest --keep-workflow-wd-on-fail --tag ${{ matrix.test }} tests/
      - name: Check logs in case of failure.
        if: ${{ failure() }}
        # Get the last 1000 lines of the cromwell log to catch the error.
        run: bash -c 'tail -n 1000 /tmp/pytest_workflow_*/*/log.out'
